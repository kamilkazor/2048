@font-face {
  font-family: "JetBrains Mono";
  src: url(../assets/fonts/JetBrains_Mono/JetBrainsMono-Regular.ttf);
}
@font-face {
  font-family: "Major Mono Display";
  src: url(../assets/fonts/Major_Mono_Display/MajorMonoDisplay-Regular.ttf);
}

.game{
  --animation-time: 0;
  --rows: 0;
  --columns: 0;
  --stars-speed-modifier: 1;

  --game-height: 0px;  
  --box-width: 700px;
  --box-padding: calc(var(--box-width) * 0.05);
  --board-width: calc(var(--box-width) * 0.9);
  --cell-size: calc(var(--board-width) / (1.1 * var(--columns) - 0.1));
  --gap-size: calc(var(--cell-size) / 10);
  --cell-font-size-basis: calc(var(--cell-size) / 3.5);
  --border-radius-size: calc(var(--box-width) / 150);
  --main-font-size-basis: calc(var(--box-width) / 50);
  
  font-family: 'JetBrains Mono';
  color: white;
  background: linear-gradient(hsl(220, 25%, 5%) 0%,hsl(220, 25%, 5%) 50%, hsl(220, 33%, 16%) 100%);
  
  user-select: none;
  overflow: hidden;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  @media screen and (max-width: 700px) {
    --box-width: 100vw;
  }
  &__stars {
    background: transparent;
    position: absolute;
    top: 0;
    left: 0;

    @keyframes starsMove {
      0% {
        transform: translateY(0);
      };
      100% {
        transform: translateY(calc(var(--game-height) * -1));
      }
    }
  }
  &__stars--after {
    top: var(--game-height);
  }
  &__stars--small {
    height: 1px;
    width: 1px;
    animation: starsMove calc(180s * var(--stars-speed-modifier)) linear infinite;
  }
  &__stars--medium {
    height: 2px;
    width: 2px;
    animation: starsMove calc(90s * var(--stars-speed-modifier)) linear infinite;
  }
  &__stars--large {
    height: 3px;
    width: 3px;
    animation: starsMove calc(60s * var(--stars-speed-modifier)) linear infinite;
  }
  &__box {
    box-sizing: border-box;
    padding: var(--box-padding);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    max-width: var(--box-width);
  }
  &__header {
    box-sizing: border-box;
    margin-bottom: var(--box-padding);
    display: flex;
    justify-content:space-between;
    width: 100%;
  }
  &__scores {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-start;
  }
  &__score {
    font-size: calc(var(--main-font-size-basis) * 2);
    margin: 0;
    display: flex;
    position: relative;
    &--best {
      font-size: calc(var(--main-font-size-basis) * 3.5);
    }
  }
  &__scoreLabel {
    margin-right: var(--main-font-size-basis);
  }
  &__scoreValue {
    &--add {
      animation: scoreValueAdd calc(var(--animation-time) * 2) ease-in;
      @keyframes scoreValueAdd {
        0% {
          transform: scale(1);
        };
        50% {
          transform: scale(1.4);
        };
        100% {
          transform: scale(1);
        }
      }
    }
  }
  &__scoreAmount {
    --xDirrection: 1;
    --yDirrection: 1;
    --xDistance: 0;
    --yDistance: 0;

    font-size: calc(var(--main-font-size-basis) * 2);
    opacity: 0;

    position: absolute;
    &--add {
      animation: scoreAmountAdd calc(var(--animation-time) * 2) ease-in;
      @keyframes scoreAmountAdd {
        0% {
          opacity: 0;
          top: calc((var(--main-font-size-basis) * 1.5 + var(--main-font-size-basis) * var(--xDistance) * 1.5) * var(--xDirrection));
          right: calc((var(--main-font-size-basis) * 1.5 + var(--main-font-size-basis) * var(--yDistance)* 1.5) * var(--yDirrection));
        };
        5% {
          opacity: 1;
        };
        100% {
          opacity: 0;
          top: 0;
          right: 0;
        }
      }
    }
  }
  &__headerButton {
    font-family: 'Major Mono Display';
    font-size: calc(var(--main-font-size-basis) * 5);
    line-height: calc(var(--main-font-size-basis) * 5);
    text-align: end;
    font-weight: bold;

    display: flex;
    align-items: center;
    justify-content: center;
    width: calc(var(--cell-size) * 1.5);
    border-radius: var(--border-radius-size);

    cursor: pointer;   
    &--click {
      animation: headerButtonClick var(--animation-time) ease-in;
      @keyframes headerButtonClick {
        0% {
          transform: scale(1);
        };
        50% {
          transform: scale(1.1);
        };
        100% {
          transform: scale(1);
        }
      }
    }
  }
  &__boardWrapper {
    position: relative;
  }
  &__board {
    touch-action: none;

    position: relative;
    display: grid;
    grid-template-rows: repeat(var(--rows), var(--cell-size));
    grid-template-columns: repeat(var(--columns), var(--cell-size));
    gap: var(--gap-size);
    border-radius: var(--border-radius-size);

    transition: opacity var(--animation-time) linear;
    &--notification {
      opacity: 0.2;
    }
    &--right {
      animation: boardRight var(--animation-time) ease-in var(--animation-time);
      @keyframes boardRight {
        0% {
          left: 0;
        }
        5% {
          left: calc(var(--box-padding) / 2);
        }
        100% {
          left: 0;
        }
      }
    }
    &--left {
      animation: boardLeft var(--animation-time) ease-in var(--animation-time);
      @keyframes boardLeft {
        0% {
          left: 0;
        }
        5% {
          left: calc(-1 * var(--box-padding) / 2);
        }
        100% {
          left: 0;
        }
      }
    }
    &--top {
      animation: boardTop var(--animation-time) ease-in var(--animation-time);
      @keyframes boardTop {
        0% {
          top: 0;
        }
        5% {
          top: calc((-1 * var(--box-padding) / 2));
        }
        100% {
          top: 0;
        }
      }
    }
    &--bottom {
      animation: boardBottom var(--animation-time) ease-in var(--animation-time);
      @keyframes boardBottom {
        0% {
          top: 0;
        }
        5% {
          top: calc((var(--box-padding) / 2));
        }
        100% {
          top: 0;
        }
      }
    }
  }
  &__notification {
    position: absolute;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    border-radius: var(--border-radius-size);
    top: 0;
    left: 0;

    background-color: hsla(220, 33%, 50%, 0.1);
    &--appear {
      animation: notificationAppear var(--animation-time) linear;
      @keyframes notificationAppear {
        0% {
          opacity: 0;
        }
        100% {
          opacity: 1;
        }
      }
    }
    &--remove {
      animation: notificationRemove var(--animation-time) linear;
      @keyframes notificationRemove {
        0% {
          opacity: 1;
        }
        100% {
          opacity: 0;
        }
      }
    }
  }
  &__notificationTitle {
    font-size: calc(var(--main-font-size-basis) * 5.5);
    font-family: 'Major Mono Display';
  }
  &__notificationButtons {
    display: flex;
    justify-content: space-evenly;
    width: 100%;
  }
  &__notificationButton {
    font-size: calc(var(--main-font-size-basis) * 3);

    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--border-radius-size);
    width: calc(var(--cell-size) * 1.7);
    height: calc(var(--cell-size) / 1.5);

    cursor: pointer;
    transition: transform var(--animation-time) ease-in-out, text-shadow var(--animation-time) ease-in-out ;
    &--select {
      transform: scale(1.1);
    }
  }
  &__cell {
    background-color: hsla(220, 33%, 50%, 0.1);
    border-radius: var(--border-radius-size);
  }
  &__tile {
    --row: 0;
    --column: 0;
    --tile-background-color: hsla(220, 60%, 20%, 0.9);
    --tile-text-color: white;

    font-size: var(--cell-font-size-basis);
    color: var(--tile-text-color);
    background-color: var(--tile-background-color);

    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: var(--border-radius-size);
    width: var(--cell-size);
    height: var(--cell-size);
    top: calc(var(--gap-size) * var(--row) + var(--cell-size) * var(--row));
    left: calc(var(--gap-size) * var(--column) + var(--cell-size) * var(--column));
    
    transition: top var(--animation-time) ease-in, left var(--animation-time) ease-in, background-color var(--animation-time) ease-in;
    &--appear {
      opacity: 0;
      animation: tileAppear calc(var(--animation-time) * 2) ease-in;
      @keyframes tileAppear {
        0% {
          opacity: 0;
          transform: scale(0);
        }
        50% {
          opacity: 0;
          transform: scale(0);
        }
        75% {
          transform: scale(1.1);
        }
        100% {
          opacity: 1;
          transform: scale(1);
        }
      }
    }
    &--upgrade {
      z-index: 2;
      animation: tileUpgrade calc(var(--animation-time) * 2) ease-in;
      @keyframes tileUpgrade {
        0% {
          transform: scale(1);
        };
        50% {
          transform: scale(1);
        };
        75% {
          transform: scale(1.1);
        }
        100% {
          transform: scale(1);
        };
      }
    }
    &--remove {
      animation: tileRemove calc(var(--animation-time) * 2) ease-in;    
      @keyframes tileRemove {
        0% {
          opacity: 1;
        }
        50% {
          opacity: 1;
        }
        100% {
          opacity: 0;
        }
      }
    }
  }
  &__tileValue {
    opacity: 1;
    &--upgrade {
      animation: tileValueUpgrade calc(var(--animation-time) * 2) ease-in;
      @keyframes tileValueUpgrade {
        0% {
          opacity: 1;
        };
        50% {
          opacity: 0;
        };
        100% {
          opacity: 1;
        }
      }
    }
    &--remove {
      animation: tileValueRemove calc(var(--animation-time) * 2) ease-in;
      @keyframes tileValueRemove {
        0% {
          opacity: 1;
        };
        50% {
          opacity: 0;
        };
        100% {
          opacity: 0;
        }
      }
    }
  }
}